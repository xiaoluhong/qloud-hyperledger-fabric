{{- $brokerNum := 4 -}}
{{- $portList := list 9092 9093 9094 9095 -}}
{{- $network := $.Values.fabricNetwork -}}
{{- range $loopIndex, $brokerIndex := untilStep 1 (int (add $brokerNum 1)) 1 }}
kind: Service
apiVersion: v1
metadata:
  name: {{ $network }}-kafka{{ $brokerIndex }}
spec:
  # Use headless service to tolerate k8s env which disables hairpin mode
  clusterIP: None
  selector:
    app: {{ $network }}-kafka{{ $brokerIndex }}
  ports:
    - protocol: TCP
      port: {{ index $portList $loopIndex }}
      name: kafka-port
---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ $network }}-kafka{{ $brokerIndex }}-deployment
  labels:
    app: {{ $network }}-kafka{{ $brokerIndex }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ $network }}-kafka{{ $brokerIndex }}
  template:
    metadata:
      labels:
        app: {{ $network }}-kafka{{ $brokerIndex }}
    spec:
      containers:
        - name: {{ $network }}-kafka{{ $brokerIndex }}
          image: hyperledger/fabric-kafka:x86_64-{{ $.Values.thirdPartyImageVersion }}
          imagePullPolicy: {{ $.Values.imagePullPolicy | quote }}
          ports:
          - containerPort: {{ index $portList $loopIndex }}
            name: kafka-port
          env:
            - name: KAFKA_PORT
              value: "{{ index $portList $loopIndex }}"
            - name: KAFKA_LISTENERS
              value: "PLAINTEXT://0.0.0.0:{{ index $portList $loopIndex }}"
            - name: KAFKA_ADVERTISED_PORT
              value: "{{ index $portList $loopIndex }}"
            - name: KAFKA_BROKER_ID
              value: "-1"
            - name: KAFKA_LOG_DIRS
              value: "/kafka-data"
            - name: KAFKA_ADVERTISED_HOST_NAME
              value: "{{ $network }}-kafka{{ $brokerIndex }}"
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: "{{ $network }}-zookeeper1:2181,{{ $network }}-zookeeper2:2181,{{ $network }}-zookeeper3:2181"
            - name: KAFKA_DELETE_TOPIC_ENABLE
              value: "true"
            - name: KAFKA_MESSAGE_MAX_BYTES
              value: "103809024"
            - name: KAFKA_REPLICA_FETCH_MAX_BYTES
              value: "103809024"
            - name: KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE
              value: "false"
            - name: KAFKA_DEFAULT_REPLICATION_FACTOR
              value: "3"
            - name: KAFKA_MIN_INSYNC_REPLICAS
              value: "2"
          volumeMounts:
            - name: data
              mountPath: /kafka-data
      initContainers:
        - name: check-zookeeper
          image: hyperledger/fabric-tools:x86_64-1.1.0
          imagePullPolicy: {{ $.Values.imagePullPolicy | quote }}
          command: ['sh', '-c']
          args: ['sleep 5; until echo stat | nc -w 3 {{ $network }}-zookeeper1 2181; do echo waiting for {{ $network }}-zookeeper1; sleep 3; done; until echo stat | nc -w 3 {{ $network }}-zookeeper2 2181; do echo waiting for {{ $network }}-zookeeper2; sleep 3; done; until echo stat | nc -w 3 {{ $network }}-zookeeper3 2181; do echo waiting for {{ $network }}-zookeeper3; sleep 3; done; sleep 5;']
      volumes:
        - name: data
          hostPath:
            path: /data/fabric/{{ $network }}/{{ $network }}-kafka{{ $brokerIndex }}
---
{{- end }}
